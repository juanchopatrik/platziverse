'use strict';

const test = require('ava');

const request = require('supertest');

const sinon = require('sinon');

const proxyquire = require('proxyquire');

const agentFixtures = require('./fixtures/agent');

let sandbox = null;
let server = null;
let dbStub = null;
let AgentStub = {};
let UuIdStub = {};
let MetricStub = {};
let uuid = 'yyy-yyy-yyy';
let uuidArgs = {
  where: {
    uuid
  }
};
test.beforeEach(async () => {
  sandbox = sinon.createSandbox();
  dbStub = sandbox.stub();
  dbStub.returns(Promise.resolve({
    Agent: AgentStub,
    Metric: MetricStub
  }));
  AgentStub.findConnected = sandbox.stub();
  AgentStub.findConnected.returns(Promise.resolve(agentFixtures.connected));
  AgentStub.findOne = sandbox.stub();
  AgentStub.findOne.withArgs(uuidArgs).returns(Promise.resolve(agentFixtures.byUuid(uuid)));
  const api = proxyquire('../api', {
    'platziverse-db': dbStub
  });
  server = proxyquire('../server', {
    './api': api
  });
});
test.afterEach(() => {
  sandbox && sinon.restore();
});
test.serial.cb('/api/agents', t => {
  request(server).get('/api/agents').expect(200).expect('Content-Type', /json/).end((err, res) => {
    t.falsy(err, 'should not return an error');
    let body = JSON.stringify(res.body);
    let expected = JSON.stringify(agentFixtures.connected);
    t.deepEqual(body, expected, 'response body should be the expected');
    t.end();
  });
});
test.serial.cb('/api/agents/:uuid', t => {
  request(server).get(`/api/agents/${uuidArgs}`).expect(200).expect('Content-Type', /json/).end((err, res) => {
    t.falsy(err, 'should not return an error');
    let body = JSON.stringify(res.body);
    let expected = JSON.stringify(agentFixtures.byUuid);
    t.deepEqual(body, expected, 'response body should be the expected');
    t.end();
  });
});
test.serial.todo('/api/agent/:uuid - not found');
test.serial.todo('/api/metrics/:uuid');
test.serial.todo('/api/metrics/:uuid - not found');
test.serial.todo('/api/metrics/:uuid/:type');
test.serial.todo('/api/metrics/:uuid/:type - not found');
//# sourceMappingURL=/home/juancho/Documentos/platzi/platziverse/platziverse-api/node_modules/.cache/ava/babe1bda98813746dbf0c993d3687cff.js.map